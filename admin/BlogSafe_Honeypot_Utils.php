<?phpclass BlogSafe_Honeypot_RemoteAddress {    /**     * Whether to use proxy addresses or not.     *     * As default this setting is disabled - IP address is mostly needed to increase     * security. HTTP_* are not reliable since can easily be spoofed. It can be enabled     * just for more flexibility, but if user uses proxy to connect to trusted services     * it's his/her own risk, only reliable field for IP address is $_SERVER['REMOTE_ADDR'].     *     * @var bool     */    protected $useProxy = false;    /**     * List of trusted proxy IP addresses     *     * @var array     */    protected $trustedProxies = array();    /**     * HTTP header to introspect for proxies     *     * @var string     */    protected $proxyHeader = 'HTTP_X_FORWARDED_FOR';    // [...]    /**     * Returns client IP address.     *     * @return string IP address.     */    public function getIpAddress() {        $ip = $this->getIpAddressFromProxy();        if ($ip) {            return $ip;        }        // direct IP address        if (isset($_SERVER['REMOTE_ADDR'])) {            return $_SERVER['REMOTE_ADDR'];        }        return '';    }    /**     * Attempt to get the IP address for a proxied client     *     * @see http://tools.ietf.org/html/draft-ietf-appsawg-http-forwarded-10#section-5.2     * @return false|string     */    protected function getIpAddressFromProxy() {        if (!$this->useProxy || (isset($_SERVER['REMOTE_ADDR']) && !in_array($_SERVER['REMOTE_ADDR'], $this->trustedProxies))        ) {            return false;        }        $header = $this->proxyHeader;        if (!isset($_SERVER[$header]) || empty($_SERVER[$header])) {            return false;        }        // Extract IPs        $ips = explode(',', $_SERVER[$header]);        // trim, so we can compare against trusted proxies properly        $ips = array_map('trim', $ips);        // remove trusted proxy IPs        $ips = array_diff($ips, $this->trustedProxies);        // Any left?        if (empty($ips)) {            return false;        }        // Since we've removed any known, trusted proxy servers, the right-most        // address represents the first IP we do not know about -- i.e., we do        // not know if it is a proxy server, or a client. As such, we treat it        // as the originating IP.        // @see http://en.wikipedia.org/wiki/X-Forwarded-For        $ip = array_pop($ips);        return $ip;    }    // [...]}class BlogSafe_Honeypot_Utils {    public function get_method() {        $Method = 'none';        $the_request = 'none';        if (isset($_SERVER['QUERY_STRING'])) {            switch ($_SERVER['REQUEST_METHOD']) {                case 'GET':                    $Method = 'GET';                    if (isset($_SERVER['QUERY_STRING'])) {                        $the_request = $_SERVER['QUERY_STRING'];                    }                    break;                case 'POST':                    $Method = 'POST';                    $the_request = file_get_contents("php://input");                    break;            }        }        return array($Method, $the_request);    }    public function get_referrer() {        $referrer = isset($_SERVER['HTTP_REFERER']) ? htmlentities($_SERVER['HTTP_REFERER']) : 'none';        return sanitize_text_field($referrer);    }    public function get_UA() {        $ua = isset($_SERVER['HTTP_USER_AGENT']) ? htmlentities($_SERVER['HTTP_USER_AGENT']) : 'none';        return sanitize_text_field($ua);    }    public function get_remote_host() {        if (isset($_SERVER['REMOTE_HOST'])) {            $remoteHost = $_SERVER['REMOTE_HOST'];        } else {            $remoteHost = gethostbyaddr($_SERVER['REMOTE_ADDR']);        }        return sanitize_text_field($remoteHost);    }    public function getTORExitList() {        global $wpdb, $wp_version;                $response = wp_remote_get(BLOGSAFE_TOR_EXIT, array(            'timeout' => 5,            'redirection' => 5,            'httpversion' => '1.0',            'user-agent' => 'WordPress/' . $wp_version . '; ' . home_url(),            'blocking' => true,            'headers' => array(),            'cookies' => array(),            'body' => null,            'compress' => false,            'decompress' => true,            'sslverify' => true,            'stream' => false,            'filename' => null        ));        if (!is_wp_error($response)) {            if (strlen($response["body"]) > 1000) {                $table_name = $wpdb->prefix . "BS_Honeypot_TORList";                $wpdb->query("TRUNCATE TABLE $table_name");                foreach (explode("\n", $response["body"]) as $line) {                    if (strpos($line, "ExitAddress") === false) {                        //skip this line                        } else {                        $data = explode(" ", $line);                        if (filter_var($data[1], FILTER_VALIDATE_IP)) {                            $thisquery = $wpdb->prepare("INSERT INTO " . $table_name . "(IP) VALUES ( %s)", $data[1]);                            $wpdb->query($thisquery);                        }                    }                }            }        }    }}